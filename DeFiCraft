# defi_craft.py

from web3 import Web3
from web3.middleware import geth_poa_middleware

# Replace with your Infura endpoint or Ethereum node endpoint
web3 = Web3(Web3.HTTPProvider('https://mainnet.infura.io/v3/YOUR_INFURA_PROJECT_ID'))
web3.middleware_onion.inject(geth_poa_middleware, layer=0)

# Replace with your contract address and ABI
contract_address = '0x1234567890abcdef1234567890abcdef12345678'
contract_abi = [
    {
        "constant": False,
        "inputs": [
            {"name": "_recipient", "type": "address"},
            {"name": "_amount", "type": "uint256"}
        ],
        "name": "sendFunds",
        "outputs": [],
        "payable": False,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "anonymous": False,
        "inputs": [
            {"indexed": True, "name": "_from", "type": "address"},
            {"indexed": True, "name": "_to", "type": "address"},
            {"indexed": False, "name": "_amount", "type": "uint256"}
        ],
        "name": "Transfer",
        "type": "event"
    }
]

# Replace with your private key
private_key = 'your_private_key'

def send_funds(recipient, amount):
    account = web3.eth.account.privateKeyToAccount(private_key)
    contract = web3.eth.contract(address=contract_address, abi=contract_abi)
    txn_hash = contract.functions.sendFunds(recipient, amount).transact({'from': account.address})
    receipt = web3.eth.waitForTransactionReceipt(txn_hash)
    return receipt

def handle_transfer_event():
    contract = web3.eth.contract(address=contract_address, abi=contract_abi)
    transfer_filter = contract.events.Transfer.createFilter(fromBlock='latest')
    for event in transfer_filter.get_all_entries():
        print(f"Transfer from {event['args']['_from']} to {event['args']['_to']} amount {event['args']['_amount']}")

if __name__ == "__main__":
    # Example usage
    recipient_address = '0xRecipientAddress'
    amount_to_send = web3.toWei(1, 'ether')  # 1 ETH in wei
    send_funds(recipient_address, amount_to_send)
    handle_transfer_event()
